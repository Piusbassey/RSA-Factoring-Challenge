#!/usr/bin/python3
import sys
import math


def is_prime(num):
    """
    Check if a number is prime.

    Args:
        num (int): The number to check for primality.
    Returns:
        bool: True if the number is prime, False otherwise.
    """
    if num < 2:
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False
    return True


def factorize_prime(n):
    """
    Factorize a number into its prime factors.

    Args:
        n (int): The number to factorize.
    Returns:
        list: A list containing the prime factors of the number.
    """
    prime_factors = []
    for i in range(2, n + 1):
        while is_prime(i) and n % i == 0:
            prime_factors.append(i)
            n //= i
    return prime_factors


def main():
    """
    Main function to factorize RSA numbers into prime factors.
    """
    if len(sys.argv) != 2:
        print("Usage: rsa_factorization <file>")
        sys.exit(1)

    input_file = sys.argv[1]

    try:
        with open(input_file, 'r') as file:
            for line in file:
                n = int(line.strip())
                if n <= 1:
                    raise ValueError("RSA number must be greater than 1.")

                prime_factors = factorize_prime(n)
                print(f"Prime factors of {n}: {prime_factors}")

    except FileNotFoundError:
        print(f"Error: File '{input_file}' not found.")
        sys.exit(1)

    except ValueError as e:
        print(f"Error: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()

